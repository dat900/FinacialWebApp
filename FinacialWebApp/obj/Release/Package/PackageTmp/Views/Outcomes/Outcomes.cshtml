@{
	ViewBag.Title = "Outcomes";
}
@model Dictionary<int, String>
<style>
	h2 {
		margin-top: 10px;
		margin-bottom: 15px;
	}

	h4 {
		margin-top: 10px;
	}

	#datepicker {
		position: relative;
		z-index: 9999;
	}
</style>
<h2>Outcomes</h2>
<div class="navbar-fixed-top">
	<button type="button" class="btn-primary" onclick="refresh()">Refresh</button>
	<button id="outcomebymonth" onclick="createChart('@Url.Action("OutcomeByMonthWithoutInsurrance", "Outcomes")', 'Monthly Outcome');" class="btn-primary">By Month</button>
	<button id="outcomebyyear" onclick="createChart('@Url.Action("OutcomeByYear", "Outcomes")', 'Annual Outcome');" class="btn-primary">By Year</button>
	<button id="outcomebyweek" onclick="createChart('@Url.Action("OutcomeByWeek", "Outcomes")', 'Weekly Outcome');" class="btn-primary">By Week</button>
	<button id="addNew" type="button" class="btn-primary" data-toggle="modal" data-target="#addModal" onclick="cleardata()">
		Add Outcomes
	</button>
	<input class="date_picker" type="text" name="dFrom" width="276" placeholder="Pick Date" autocomplete="off" data-provide="datepicker" />
	~
	<input class="date_picker" type="text" name="dTo" width="276" placeholder="Pick Date" autocomplete="off" data-provide="datepicker" />
	<button id="outcomebyweek" onclick="createChartByDateRange();" class="btn-primary">Filter</button>
	<input type="checkbox" onclick="displayInsurrance();" id="insurrance" />&nbsp;Display Insurrance
</div>
<!-- The Modal -->
<div class="modal" role="dialog" id="addModal" tabindex="-1" aria-labelledby="addModal" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">

			<!-- Modal Header -->
			<div class="modal-header">
				<h4 class="modal-title" id="addModal">Outcome</h4>
			</div>

			<!-- Modal body -->
			<div class="modal-body">					  
					<table class="table" border="0">
						<tr>
							<td>
								<label class="">Date: </label>
							</td>
							<td>
								<input class="date_picker" type="text" name="date" width="276" placeholder="Pick Date" autocomplete="off" data-provide="datepicker" />
							</td>
						</tr>
						<tr>
							<td>
								<label>Type:</label>
							</td>
							<td>
								<select name="type">
									<!--render from json-->
									@foreach (var item in Model)
									{
										<option value=@item.Key>@item.Value</option>
									}
								</select>
							</td>
						</tr>
						<tr>
							<td>
								<label>Money(1.000đ): </label>
							</td>
							<td>
								<input type="number" name="money" id="money" />
							</td>
						</tr>
						<tr>
							<td>
								<label>Note</label>
							</td>
							<td>
								<input type="text" name="note" id="note" />
							</td>
						</tr>
					</table>
					<input type="button" class="bg-success" value="Add New" onclick="addOutcome();" data-dismiss="modal"></>
			</div>

			<!-- Modal footer -->
			<div class="modal-footer">
				<button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
			</div>

		</div>
	</div>
</div>
<div class="row">
	<canvas id="outcomechartContainer"></canvas>
	<h2 style="margin-left: 20px;" id="chartLabel">Outcome By Type (All)</h2>
	<canvas id="typeoutcomechartContainer" tabindex="0"></canvas>
</div>

<script type="text/javascript">
	var chart = document.getElementById('outcomechartContainer');
	var typeChart = document.getElementById("typeoutcomechartContainer");
	var color = ["rgb(26,46,40)", "rgb(216,16,41)", "rgb(21,76,50)", "rgb(120,86,40)", "rgb(25,86,40)", "rgb(220,66,40)"];
	var chartTypeObject;
	var presentChart;
	var url;
	function createChart(url, chart_name) {
		updateChart(presentChart, url, chart_name);
	}
	function createChartByDateRange() {
		var from = $("input[name=dFrom]").val();
		var to = $("input[name=dTo]").val()
		if (from > to) {
			alert("Range is invalid");
			return;
		}
		presentChart.destroy();
		$.ajax({
			url: '@Url.Action("OutComeByDateRange", "Outcomes")',
			data: { dFrom: from, dTo: to },
			async: true,
			method: 'post',
			success: function (data) {
				presentChart = addNewChart(chart, data.labels, "Outcome By Range", data.money, 'bar', '', 'rgb(216, 42, 60)');
			}
		});
	}
	$(document).ready(function () {
		$.ajax({
			url: '@Url.Action("OutcomeByMonthWithoutInsurrance", "Outcomes")',
			data: {},
			async: false,
			method: 'post',
			success: function (data) {
				presentChart = addNewChart(chart, data.labels, "Monthly Outcome", data.money, 'bar', '', 'rgb(216, 42, 60)');
			}
		});
		$.ajax({
			url: '@Url.Action("OutcomeByType", "Outcomes")',
			data: {},
			async: false,
			method: 'post',
			success: function (data) {
				chartTypeObject = addNewChart(typeChart, data.labels, "Type Outcomes", data.money, 'pie', 'rgb(216,86,40)', color);
			}
		});
	})

	$('#outcomechartContainer').click(function (evt) {
		const canvasPosition = presentChart.getElementAtEvent(evt)[0];
		if (canvasPosition == null) {
			return;
		}
		var label = presentChart.data.labels[canvasPosition._index];
		$('#typeoutcomechartContainer').text(label);
		$.ajax({
			url: '@Url.Action("MonthlyOutcomeByType", "Outcomes")',
			method: 'POST',
			data: { month: label.substr(0, label.indexOf("/")) },
			async: true,
			success: function (data) {
				chartTypeObject.destroy();
				chartTypeObject = addNewChart(typeChart, data.labels, 'Type Outcome', data.money, 'pie', 'rgb(216,86,40)', color);
				$("#chartLabel").text("Outcome By Type (Month " + label + ")");
				$('#typeoutcomechartContainer').focus()
			}

		});
	})
	function refresh() {
		updateChart(presentChart, "@Url.Action("OutcomeByMonthWithoutInsurrance", "Outcomes")", "Monthly Outcome");
		updateChart(chartTypeObject, "@Url.Action("OutcomeByType", "Outcomes")");
		$("#chartLabel").text("Outcome By Type (All)");
	}
	$('.date_picker').datepicker({
		dateFormat: 'yy/mm/dd',
		defaultDate: new Date()
	})
	$("form").submit(function (e) {
		checkInput(e)
	})
	function displayInsurrance() {
		presentChart.destroy();
		var checked = $("#insurrance").is(":checked");
		url = '@Url.Action("OutcomeByMonthWithoutInsurrance", "Outcomes")';
		if (checked)
		{
			url =  '@Url.Action("OutcomeByMonth", "Outcomes")';
		}
		$.ajax({
			url: url,
			data: {},
			async: false,
			method: 'post',
			success: function (data) {
				presentChart = addNewChart(chart, data.labels, "Monthly Income", data.money, 'bar', '', 'rgb(216, 42, 60)');
			}
		});
	}
	function addOutcome() {
		var dDate = $("input[name=date]").val();
		var sType = $("select[name=type]").val();
		var dMoney = $("input[name=money]").val();
		var sNote = $("input[name=note]").val();
		$.ajax({
			url: '@Url.Action("AddOutcome", "Outcomes")',
			data: { dDate, dMoney, sType, sNote},
			async: false,
			method: 'post',
			success: function (data) {
				refresh();
			}
		});
	}
	function cleardata()
	{
		$("input[name=date]").val('');
		$("select[name=type]").val('');
		$("input[name=money]").val('');
		$("input[name=note]").val('');
	}
</script>

